<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">


<context:annotation-config></context:annotation-config>
<context:component-scan base-package="com.training"></context:component-scan>

<!-- 
<bean id="dataSrc" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
p:driverClassName="oracle.jdbc.driver.OracleDriver" p:username="system" p:password="sapjuly16" 
p:url="jdbc:oracle:thin:@localhost:1521:XE"></bean>
 -->

<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" 
p:location="classpath:DbConnection.properties"></bean>

<bean id="dataSrc" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
p:driverClassName="${db.driverClass}" p:username="${db.userName}" p:password="${db.passWord}" p:url="${db.driverURL}"></bean>

<bean id="template" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSrc"/>

<!-- initialize 'dao' here instead of in class so we don't have to use 'new' in Java. Just ctx.getBean(CustomerDao.class) -->
<bean id="dao" class="com.training.daos.CustomerDao"></bean>

<bean id="mapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper" p:mappedClass="com.training.entity.Customer"/>

</beans>
